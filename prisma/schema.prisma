generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Token {
  email      String   @unique
  code       String   @unique
  expiration DateTime
}

model Company {
  id             String   @id @default(cuid())
  Name           String   @unique
  Industry       String
  GSTIN          String   @unique
  CompanySize    String
  Address        String
  CompanyWebsite String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime
  users          User[]
}

model User {
  id        String           @id @default(cuid())
  username  String
  email     String           @unique
  password  String
  verified  Boolean          @default(false)
  onboarded Boolean          @default(false)
  createdAt DateTime         @default(now())
  updatedAt DateTime
  companyId String?
  role      Role             @default(ADMIN)
  logs      Inventory_logs[]
  company   Company?         @relation(fields: [companyId], references: [id])
}

model Customer {
  name         String
  phone        String   @unique
  address      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  id           String   @id @default(cuid())
  Code         Int
  GSTIN        String
  State_Name   String
  orderHistory Order[]
}

model Products {
  name        String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  id          String       @id @default(cuid())
  HSN         Int
  barcode     String?      @unique
  barcodeType BarcodeType? @default(CODE128)
  variants    Variants[]

  @@index([name])
  @@index([barcode])
}

model Variants {
  productId     String
  size          String
  price         Float
  stock         Int
  supplierId    String?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  id            String           @id @default(cuid())
  name          String
  sellingPrice  Float            @default(0)
  logs          Inventory_logs[]
  purchaseItems PurchaseItem[]
  product       Products         @relation(fields: [productId], references: [id])
  supplier      Supplier?        @relation(fields: [supplierId], references: [id])
  orderItems    order_items[]

  @@unique([productId, size, name])
  @@index([name])
}

model Order {
  id                  String        @id @default(cuid())
  order_date          DateTime      @default(now())
  customerId          String
  total_amount        Float
  status              String        @default("pending")
  notes               String?
  subtotal            Float
  discountType        String        @default("none")
  discount            Float         @default(0)
  specialDiscountType String        @default("none")
  specialDiscount     Float         @default(0)
  remarks             String?
  csgt                Float         @default(0)
  sgst                Float         @default(0)
  igst                Float         @default(0)
  taxableAmount       Float         @default(0)
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  customer            Customer      @relation(fields: [customerId], references: [id])
  items               order_items[]
}

model order_items {
  id           String   @id @default(cuid())
  orderId      String
  variantId    String
  quantity     Int
  rate         Float
  discountType String   @default("none")
  discount     Float    @default(0)
  total        Float
  order        Order    @relation(fields: [orderId], references: [id])
  variant      Variants @relation(fields: [variantId], references: [id])

  @@unique([orderId, variantId])
  @@index([orderId])
  @@index([variantId])
}

model Supplier {
  name       String
  phone      String
  address    String
  createdAt  DateTime        @default(now())
  id         String          @id @default(cuid())
  CIN        String
  Code       Int
  GSTIN      String          @unique
  PAN        String          @unique
  Supp_State String
  division   String
  purchases  PurchaseOrder[]
  variants   Variants[]
}

model PurchaseOrder {
  id            String         @id @default(cuid())
  supplierId    String
  status        PurchaseStatus @default(PENDING)
  notes         String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  Date          DateTime
  invoiceNo     String         @unique
  cgst          Float?
  discount      Float
  igst          Float?
  sgst          Float?
  subtotal      Float
  taxableAmount Float
  totalAmount   Float
  items         PurchaseItem[]
  supplier      Supplier       @relation(fields: [supplierId], references: [id])
}

model PurchaseItem {
  id         String        @id @default(cuid())
  purchaseId String
  variantId  String
  quantity   Int
  unitPrice  Float
  discount   Float
  totalPrice Float
  purchase   PurchaseOrder @relation(fields: [purchaseId], references: [id])
  variant    Variants      @relation(fields: [variantId], references: [id])
}

model Inventory_logs {
  variantId   String
  change      Int
  reason      String
  createdById String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  id          String   @id @default(cuid())
  creatredBy  User     @relation(fields: [createdById], references: [id])
  variant     Variants @relation(fields: [variantId], references: [id])

  @@index([variantId])
}

enum Role {
  SALESMAN
  ADMIN
}

enum PurchaseStatus {
  PENDING
  ORDERED
  APPROVED
  RECEIVED
  CANCELLED
}

enum BarcodeType {
  CODE128
  CODE39
  CODE93
  EAN13
  EAN8
  UPC_A
  UPC_E
  QR_CODE
  DATA_MATRIX
  PDF417
  AZTEC
  CODABAR
  ITF
}
